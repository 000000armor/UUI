# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ cicd_test ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    
    runs-on: ubuntu-latest
    container: node:14
  

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
        
    - uses: actions/cache@v2
      with:
        path: |
          node_modules
          ./*/node_modules
        key: v1-npm-deps-${{ hashFiles('**/yarn.lock') }}
        restore-keys: v1-npm-deps-
      

    - name: build
      run: | 
        yarn
        yarn build
        yarn generate-components-api
        cd server && yarn
    - name: test  
      run: yarn test
      
  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    container: node:14
  

    steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
        
    - uses: actions/cache@v2
      with:
        path: |
          node_modules
          ./*/node_modules
        key: v1-npm-deps-${{ hashFiles('**/yarn.lock') }}
        restore-keys: v1-npm-deps-
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
      
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Login to registry
      uses: docker/login-action@v1 
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
        
    - name: Build and push
      id: docker_build
      run: |
        docker build -t ${{ secrets.REGISTRY_URL }}/$IMAGE_NAME:$GITHUB_SHA .
        docker push ${{ secrets.REGISTRY_URL }}/$IMAGE_NAME:$GITHUB_SHA
        
        
        
        
        
        
        
