# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ cicd_test ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-test:
    
    runs-on: ubuntu-latest
    container: node:14
  

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          
      - uses: actions/cache@v2
        with:
          path: |
            node_modules
            ./*/node_modules
            app
            public
            server
            changelog.md
            package.json
          key: v1-npm-deps-${{ hashFiles('**/yarn.lock') }}        
      
      - name: build
        run: | 
          yarn
          yarn build
          yarn generate-components-api
          cd server && yarn
      - name: test  
        run: yarn test
        
      - uses: actions/upload-artifact@v2
        with:
          name: npm-artifact-$GITHUB_SHA
          path: |
            node_modules
            ./*/node_modules
            app
            public
            server
            changelog.md
            package.json
      
  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ui
      ACTIONS_STEP_DEBUG: true
      REGISTRY_URL: epmtai.azurecr.io
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      
      - uses: actions/download-artifact@v2
        with:
          name: npm-artifact-$GITHUB_SHA
      
      - name: Login to registry
        uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: ls
        run: ls -la
        
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.REGISTRY_URL }}/ui:0.0.2222
          
        
        
        
        
        
        
