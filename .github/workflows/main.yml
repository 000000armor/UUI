# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ cicd_test ]
  pull_request:
    branches: [ main ]
    types: [ closed ]
  
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:

  build-and-test:  
    runs-on: ubuntu-latest
    container: node:14

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14.x'
          

      - name: build app
        run: | 
          yarn
          yarn build
          yarn generate-components-api
          cd server && yarn
         
      - name: test  
        run: yarn test      
       
  docker:
    needs: build-and-test
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ui
      ACTIONS_STEP_DEBUG: true
      REGISTRY_URL: epmtai.azurecr.io
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2
      
      - name: build app
        run: | 
          yarn
          yarn build
          yarn generate-components-api
          cd server && yarn      
            
         
      - name: Login to registry
        uses: docker/login-action@v1 
        with:
          registry: ${{ secrets.REGISTRY_URL }}
          username: ${{ secrets.REGISTRY_USER }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
       
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.REGISTRY_URL }}/ui
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha
            
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
              
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
              
       
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    steps:

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ secrets.REGISTRY_URL }}/uui
          # generate Docker tags based on the following events/attributes
          tags: |
            type=sha    
      
      - name: Prep helm chart
        run: |
          export tag=$(echo ${{ steps.meta.outputs.tags }} | awk -F":" '{print $2}')   
          export HELM_EXPERIMENTAL_OCI=1
          echo "::set-env name=HELM_EXPERIMENTAL_OCI::$HELM_EXPERIMENTAL_OCI"
          echo $tag 
          echo ${{ secrets.REGISTRY_PASSWORD }} | helm registry login ${{ secrets.REGISTRY_URL }} --username ${{ secrets.REGISTRY_USER }} --password-stdin
          helm chart pull ${{ secrets.HELM_REGISTRY }}
          helm chart export ${{ secrets.HELM_REGISTRY }} --destination .
          ls -la ui
          export name1=ui-production
          echo "::set-env name=name1::$name1"

      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm chart list
          kubeconfig: ${{ secrets.KUBECONFIG }}


      - name: Deploy
        uses: WyriHaximus/github-action-helm3@v2
        with:
          exec: helm history $name1
          kubeconfig: ${{ secrets.KUBECONFIG }}

#          exec: helm history ${{ secrets.APP_NAME }}        
        
