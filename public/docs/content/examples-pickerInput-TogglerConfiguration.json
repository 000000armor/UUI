{
  "object": "value",
  "document": {
    "object": "document",
    "data": {},
    "nodes": [
      {
        "object": "block",
        "type": "paragraph",
        "data": {},
        "nodes": [
          {
            "object": "text",
            "text": "You can configure how many tags should be shown in the picker toggler via the ",
            "marks": []
          },
          {
            "object": "text",
            "text": "maxItems",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " prop; if you have more items than the maxItem number, they will be wrapped into one tag.",
            "marks": []
          }
        ]
      },
      {
        "object": "block",
        "type": "paragraph",
        "data": {},
        "nodes": [
          {
            "object": "text",
            "text": "By default, PickerInput wraps tags in a new line. You can change this behavior via the ",
            "marks": []
          },
          {
            "object": "text",
            "text": "isSingleLine={ true }",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " prop.",
            "marks": []
          }
        ]
      },
      {
        "object": "block",
        "type": "paragraph",
        "data": {},
        "nodes": [
          {
            "object": "text",
            "text": "If you prefer the autocomplete behavior â€” when the dropdown opens after you type some number of symbols - use  ",
            "marks": []
          },
          {
            "object": "text",
            "text": "minCharsToSearch",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " prop. Pay attention that you set ",
            "marks": []
          },
          {
            "object": "text",
            "text": "searchPosition='input'",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " in this case.",
            "marks": []
          }
        ]
      },
      {
        "object": "block",
        "type": "paragraph",
        "data": {},
        "nodes": [
          {
            "object": "text",
            "text": "At last, you can define your own toggler components via the ",
            "marks": []
          },
          {
            "object": "text",
            "text": "renderToggler",
            "marks": [
              {
                "object": "mark",
                "type": "uui-richTextEditor-code",
                "data": {}
              }
            ]
          },
          {
            "object": "text",
            "text": " callback.",
            "marks": []
          }
        ]
      }
    ]
  }
}