{
  "object": "value",
  "document": {
    "object": "document",
    "data": {},
    "nodes": [
      {
        "object": "block",
        "type": "paragraph",
        "data": {},
        "nodes": [
          {
            "object": "block",
            "type": "table",
            "data": {
              "cellSizes": [
                222.48263549804688,
                571.9203796386719,
                137.05316162109375
              ]
            },
            "nodes": [
              {
                "object": "block",
                "type": "table_row",
                "data": {},
                "nodes": [
                  {
                    "object": "block",
                    "type": "table_header_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "Property",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-bold",
                                "data": {}
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_header_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "Description",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_header_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "Default",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "object": "block",
                "type": "table_row",
                "data": {},
                "nodes": [
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "api",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-bold",
                                "data": {}
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "A function to retrieve the data, asynchronously.",
                            "marks": []
                          }
                        ]
                      },
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "This function usually performs a REST API call. API is used to retrieve lists of items. It is expected to:\n- be able to handle paging (via from/count params);\n- be able to retrieve specific items by the list of their ids;\n- be able to retrieve children by parents (when ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "getChildCount",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": " is specified, and ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "context.parentId",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": " is passed).",
                            "marks": []
                          }
                        ]
                      },
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "This property will be overviewed in deep in the next paragraph.",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "object": "block",
                "type": "table_row",
                "data": {},
                "nodes": [
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "getChildCount",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-bold",
                                "data": {}
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "Should return a number of item's children. If it ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "returns > 0",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": ", the item is assumed to have children and to be foldable. This, in turns, tells the DataSource to attempt to fetch item's children via api. Usually, this value should be returned from API, as a field of a parent, e.g. { id: 1, name: 'London', childCount: 12 }. In this case, you can implement getChildCount as (i) => i.childCount. If you can't get a number of children this way, you can return a guess value (avg number of children for this type of entity). Note, that this can lead to more API calls and increased load times in the ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "'parallel'",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": " fetch mode.",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "object": "block",
                "type": "table_row",
                "data": {},
                "nodes": [
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "filter",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-bold",
                                "data": {}
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "A filter to pass to API.",
                            "marks": []
                          }
                        ]
                      },
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "Note, that the ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "DataSourceState",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": " also has a filter field. These two filters are merged before API calls. Use this prop if you need to apply some filter in any case. Prefer to use a filter in the ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "DataSourceState",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": " for end-user editable filters.",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "object": "block",
                "type": "table_row",
                "data": {},
                "nodes": [
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "fetchStrategy",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-bold",
                                "data": {}
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "Defines how to fetch children:",
                            "marks": []
                          }
                        ]
                      },
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "- ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "sequential",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": ": fetch children for each parent one by one. Makes minimal over-querying, at the cost of some speed;\n- ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "parallel",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": ": fetch children for several parents simultaneously. Can make a lot of over-querying for deep trees. Recommended for 2-level trees (grouping), as it makes no over-querying in this case, and is faster than sequential strategy.",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "'sequential'",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "object": "block",
                "type": "table_row",
                "data": {},
                "nodes": [
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "flattenSearchResults",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-bold",
                                "data": {}
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "Falls back to a plain list from a tree, if there's a search. If enabled, and the search is active:\n- ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "API",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": " will be called with parentId and parent - undefined;\n- ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "getChildCount",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": " is ignored, all nodes are assumed to have no children.",
                            "marks": []
                          }
                        ]
                      },
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "See more here: ",
                            "marks": []
                          },
                          {
                            "object": "inline",
                            "type": "link",
                            "data": {
                              "url": "https://github.com/epam/UUI/issues/8"
                            },
                            "nodes": [
                              {
                                "object": "text",
                                "text": "https://github.com/epam/UUI/issues/8",
                                "marks": []
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": "",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              },
              {
                "object": "block",
                "type": "table_row",
                "data": {},
                "nodes": [
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "legacyLoadDataBehavior",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-bold",
                                "data": {}
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "This option is added for the purpose of supporting the legacy behavior of fetching data on ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "getVisibleRows",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": " and ",
                            "marks": []
                          },
                          {
                            "object": "text",
                            "text": "getListProps",
                            "marks": [
                              {
                                "object": "mark",
                                "type": "uui-richTextEditor-code",
                                "data": {}
                              }
                            ]
                          },
                          {
                            "object": "text",
                            "text": ", not to break users' own implementation of dataSources.",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "object": "block",
                    "type": "table_cell",
                    "data": {},
                    "nodes": [
                      {
                        "object": "block",
                        "type": "paragraph",
                        "data": {},
                        "nodes": [
                          {
                            "object": "text",
                            "text": "",
                            "marks": []
                          }
                        ]
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      },
      {
        "object": "block",
        "type": "paragraph",
        "data": {},
        "nodes": [
          {
            "object": "text",
            "text": "",
            "marks": []
          }
        ]
      }
    ]
  }
}